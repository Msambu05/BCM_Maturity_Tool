# Generated by Django 5.2.4 on 2025-08-28 12:31

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assessments', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ImprovementRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_id', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('current_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('target_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('proposed', 'Proposed'), ('approved', 'Approved'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('deferred', 'Deferred'), ('rejected', 'Rejected')], default='proposed', max_length=20)),
                ('suggested_actions', models.TextField()),
                ('estimated_effort', models.PositiveIntegerField(blank=True, help_text='Estimated effort in person-hours', null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('timeline_weeks', models.PositiveIntegerField(blank=True, null=True)),
                ('target_completion_date', models.DateField(blank=True, null=True)),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('actual_completion_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('milestones', models.JSONField(default=list)),
                ('expected_impact', models.TextField(blank=True, null=True)),
                ('risk_level', models.CharField(blank=True, choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=20, null=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='improvement_recommendations', to='assessments.assessment')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_recommendations', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='improvement_recommendations', to='users.department')),
                ('focus_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='improvement_recommendations', to='assessments.focusarea')),
            ],
            options={
                'db_table': 'improvement_recommendations',
                'ordering': ['priority', 'target_completion_date'],
                'indexes': [models.Index(fields=['assessment', 'status'], name='improvement_assessm_665618_idx'), models.Index(fields=['focus_area', 'priority'], name='improvement_focus_a_a0dbab_idx')],
            },
        ),
        migrations.CreateModel(
            name='MaturityScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('level', models.PositiveIntegerField(choices=[(0, 'Not Started (0%)'), (1, 'Initial (1-39%)'), (2, 'Developing/Repeatable (40-59%)'), (3, 'Defined (60-79%)'), (4, 'Managed (80-99%)'), (5, 'Optimized (100%)')])),
                ('max_possible_score', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('weighted_score', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('question_count', models.PositiveIntegerField()),
                ('answered_count', models.PositiveIntegerField()),
                ('completion_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('average_response_time', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('benchmark_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('benchmark_percentile', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('gap', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('calculated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_current', models.BooleanField(default=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maturity_scores', to='assessments.assessment')),
                ('focus_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maturity_scores', to='assessments.focusarea')),
            ],
            options={
                'db_table': 'maturity_scores',
                'ordering': ['assessment', 'focus_area__order_index'],
                'indexes': [models.Index(fields=['assessment', 'is_current'], name='maturity_sc_assessm_74b99a_idx'), models.Index(fields=['focus_area', 'score'], name='maturity_sc_focus_a_4d3014_idx')],
                'unique_together': {('assessment', 'focus_area', 'version')},
            },
        ),
        migrations.CreateModel(
            name='ScoreSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshot_type', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('periodic', 'Periodic')], default='automatic', max_length=20)),
                ('taken_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('overall_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('overall_level', models.PositiveIntegerField(blank=True, choices=[(0, 'Not Started (0%)'), (1, 'Initial (1-39%)'), (2, 'Developing/Repeatable (40-59%)'), (3, 'Defined (60-79%)'), (4, 'Managed (80-99%)'), (5, 'Optimized (100%)')], null=True)),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('focus_area_scores', models.JSONField(default=dict)),
                ('question_stats', models.JSONField(default=dict)),
                ('note', models.TextField(blank=True, null=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_snapshots', to='assessments.assessment')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_score_snapshots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'score_snapshots',
                'ordering': ['-taken_at'],
                'indexes': [models.Index(fields=['assessment', 'taken_at'], name='score_snaps_assessm_f9225d_idx')],
            },
        ),
    ]
