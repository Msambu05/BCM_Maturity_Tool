# Generated by Django 5.2.4 on 2025-08-28 12:30

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assessments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receive_email_notifications', models.BooleanField(default=True)),
                ('email_assessment_due', models.BooleanField(default=True)),
                ('email_assessment_overdue', models.BooleanField(default=True)),
                ('email_report_ready', models.BooleanField(default=True)),
                ('email_system_alerts', models.BooleanField(default=True)),
                ('receive_in_app_notifications', models.BooleanField(default=True)),
                ('in_app_assessment_due', models.BooleanField(default=True)),
                ('in_app_assessment_overdue', models.BooleanField(default=True)),
                ('in_app_report_ready', models.BooleanField(default=True)),
                ('digest_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Digest')], default='immediate', max_length=20)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notification_preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('assessment_due', 'Assessment Due'), ('assessment_overdue', 'Assessment Overdue'), ('assessment_submitted', 'Assessment Submitted'), ('assessment_reviewed', 'Assessment Reviewed'), ('evidence_required', 'Evidence Required'), ('report_ready', 'Report Ready'), ('system_alert', 'System Alert'), ('user_invitation', 'User Invitation'), ('password_reset', 'Password Reset')], max_length=50)),
                ('notification_type', models.CharField(choices=[('email', 'Email'), ('in_app', 'In-App'), ('both', 'Both')], default='both', max_length=10)),
                ('subject_template', models.CharField(max_length=255)),
                ('message_template', models.TextField()),
                ('html_template', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notification_templates',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_id', models.CharField(max_length=50, unique=True)),
                ('category', models.CharField(choices=[('assessment_due', 'Assessment Due'), ('assessment_overdue', 'Assessment Overdue'), ('assessment_submitted', 'Assessment Submitted'), ('assessment_reviewed', 'Assessment Reviewed'), ('evidence_required', 'Evidence Required'), ('report_ready', 'Report Ready'), ('system_alert', 'System Alert'), ('user_invitation', 'User Invitation'), ('password_reset', 'Password Reset')], max_length=50)),
                ('notification_type', models.CharField(choices=[('email', 'Email'), ('in_app', 'In-App'), ('both', 'Both')], max_length=10)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('html_content', models.TextField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('email_address', models.EmailField(max_length=254)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed'), ('archived', 'Archived')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True, null=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('click_count', models.PositiveIntegerField(default=0)),
                ('open_count', models.PositiveIntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('assessment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='assessments.assessment')),
                ('cc_recipients', models.ManyToManyField(blank=True, related_name='cc_notifications', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
    ]
